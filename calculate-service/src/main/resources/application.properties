server.port=9998
spring.application.name=calculate-service
spring.cloud.consul.host=localhost
spring.cloud.consul.port=8500
spring.cloud.consul.config.enabled=true
spring.cloud.consul.config.import-check.enabled=false
spring.cloud.consul.discovery.health-check-path=/calculate/max
spring.cloud.consul.discovery.health-check-interval=8s
spring.cloud.consul.discovery.health-check-tls-skip-verify=true
spring.cloud.consul.discovery.scheme=http

#frontend gateway_1
#bind 127.0.0.1:3005 ssl crt /etc/haproxy/ssl/mydomain.pem
#default_backend load_balancer_1
#
#
#backend load_balancer_1
#server server1 127.0.0.1:9999 check ssl verify none
#server server2 127.0.0.1:9998 check ssl verify none
#

#curl -H 'Content-Type: application/json' -d '{ "address": "127.0.0.1", "port": 8500, "enabled": true, "retry_timeout": 10}' http://127.0.0.1:5555/v2/service_discovery/consul


#spring:
##  config:
##    activate:
##      on-profile: instance_1
##  application:
##    name: calculate-service
#  cloud:
#    consul:
#      host: localhost
#      config:
#        enabled: true
#      port: 8500
#      discovery:
#        instance-id: app-${server.port}
#        serviceName: ${spring.application.name}-${server.port}
#        healthCheckUrl: http://localhost:${server.port}/health
#        healthCheckInterval: 15s
#        scheme: http
#
#server:
#  port: 8097
#---
##server:
##  port: 10161
##  shutdown: graceful
##spring:
##  config:
##    activate:
##      on-profile: instance_2
##  application:
##    name: calculate-service
##  cloud:
##    consul:
##      host: localhost
##      port: 8500
##      discovery:
##        instance-id: app-${server.port}
##        serviceName: ${spring.application.name}-${server.port}
##        healthCheckUrl: http://localhost:${server.port}/health
##        healthCheckInterval: 15s